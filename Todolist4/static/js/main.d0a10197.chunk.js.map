{"version":3,"sources":["serviceWorker.js","Constants.js","CredentialsProvider.js","Todo.js","App.js","index.js"],"names":["Boolean","window","location","hostname","match","KINTO","CredentialsProvider","loginRef","React","createRef","passwordRef","submitted","event","preventDefault","login","_this","current","value","password","h","Headers","auth","btoa","set","fetch","headers","then","r","json","user","props","onAuthOk","this","authorization","react_default","a","createElement","children","className","onSubmit","ref","type","Component","connect","state","dispatch","STATUSES","split","Todo","Object","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","editing","inputRef","_onEditionStart","onEditionStart","bind","assertThisInitialized","_onEditionEnd","onEditionEnd","e","setState","newTitle","innerText","onTitleChange","focus","status","onClick","onStatusChange","contentEditable","onDoubleClick","onBlur","title","creation","App","_maybeNew","maybeNew","_addTodo","addTodo","_this2","resp","catch","err","console","log","bid","data","id","getOrCreate","collections","_this3","length","filter","c","listTodos","method","body","JSON","stringify","j","_this4","l","server","join","onReceivedServerList","todos","keyCode","onNewTodo","_this5","map","todo","s","_statusChange","indexOf","_titleChange","key","Todo_Todo","onKeyUp","trim","url","syncurl","store","createStore","action","objectSpread","t","maxid","reduce","acc","Math","max","concat","Date","toISOString","replace","subscribe","getState","payload","ReactDOM","render","es","src_CredentialsProvider_0","src_App_0","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.d0a10197.chunk.js","sourcesContent":["// vim: set ts=2 sts=2 sw=2 expandtab :\n\n// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","const KINTO = \"https://my4xnde1oti2ntm1odk3otm.herokuapp.com/v1\";\n\nexport { KINTO }\n\n","// vim: set ts=2 sts=2 sw=2 expandtab :\nimport { connect } from 'react-redux';\nimport { KINTO } from './Constants';\nimport React, { Component } from 'react';\nimport './CredentialsProvider.css';\n\nclass CredentialsProvider extends Component {\n  loginRef = React.createRef();\n  passwordRef = React.createRef();\n  submitted = event => {\n    event.preventDefault();\n    const login = this.loginRef.current.value;\n    const password = this.passwordRef.current.value;\n    if(login && password) {\n      const h = new Headers();\n      const auth = \"Basic \"+btoa(login+\":\"+password);\n      h.set(\"Authorization\", auth);\n      fetch(KINTO+\"/\", {headers:h})\n        .then(r=>r.json())\n        .then(json=>{\n          if(json.user) {\n            this.props.onAuthOk(auth);\n          }\n        });\n    }\n  }\n  render() {\n    if(this.props.authorization) {\n      return (<div>{this.props.children}</div>);\n    } else {\n      return (\n        <form className=\"login-component\" onSubmit={this.submitted}>\n          <div className=\"login-flex\">\n            <label>Login</label><input ref={this.loginRef} type=\"text\" />\n            <label>Password</label><input ref={this.passwordRef} \n              type=\"password\" />\n            <input type=\"submit\" value=\"Login\" />\n          </div>\n        </form>\n        );\n    }\n  }\n}\n\nexport default connect(\n  state=>({authorization:state.authorization}),\n  dispatch=>({\n    onAuthOk:auth=>dispatch({type:\"AUTH_OK\", authorization:auth}),\n  }),\n)(CredentialsProvider);\n","// vim: set ts=2 sts=2 sw=2 expandtab :\nimport React, { Component } from 'react';\nimport './Todo.css';\n\nconst STATUSES = \"todo,ongoing,finished,removed,canceled\".split(/,/g);\nfunction nextStatus(s) {\n    return STATUSES[(1+STATUSES.indexOf(s || \"\"))%(STATUSES.length)]\n}\nfunction getStatusAction(id, newStatus) {\n    return {type:\"STATUS_CHANGE\", id:id, status:newStatus};\n}\nfunction getTitleAction(id, newTitle) {\n    return {type:\"TITLE_CHANGE\", id:id, title:newTitle};\n}\nfunction getAddAction(title) {\n    return {type:\"TODO_ADD\", title:title};\n}\n\nclass Todo extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      editing: false,\n    }\n    this.inputRef = React.createRef();\n    this._onEditionStart = this.onEditionStart.bind(this);\n    this._onEditionEnd = this.onEditionEnd.bind(this);\n  }\n  onEditionStart(e) {\n    if(!(this.state.editing)) {\n        this.setState({editing:true});\n    }\n  }\n  onEditionEnd(e) {\n    if(this.state.editing) {\n      this.setState({editing:false});\n      const newTitle = this.inputRef.current.innerText;\n      this.props.onTitleChange && this.props.onTitleChange(newTitle);\n    }\n  }\n  componentDidUpdate() {\n    if(this.state.editing) {\n      this.inputRef.current.focus();\n    }\n  }\n  render() {\n    return (\n      <div className={\"task \"+(this.props.status || \"todo\")}>\n        <button onClick={this.props.onStatusChange} />\n        <span contentEditable={this.state.editing}\n          onDoubleClick={this._onEditionStart}\n          onBlur={this._onEditionEnd}\n          ref={this.inputRef}\n          >{this.props.title}</span>\n        <time>{this.props.creation}</time>\n      </div>\n    );\n  }\n}\n\nexport {Todo,nextStatus,getStatusAction,getTitleAction,getAddAction};\n\n","// vim: set ts=2 sts=2 sw=2 expandtab :\nimport { connect } from 'react-redux';\nimport React, { Component } from 'react';\nimport { Todo, nextStatus } from './Todo';\nimport { KINTO } from './Constants';\nimport './App.css';\n\nclass App extends Component {\n  constructor(props) {\n    super(props)\n    this.inputRef = React.createRef();\n    this._maybeNew = this.maybeNew.bind(this);\n    this._addTodo = this.addTodo.bind(this);\n  }\n  componentWillMount() {\n    const h = new Headers();\n    h.set(\"Authorization\", this.props.authorization);\n    fetch(KINTO+\"/buckets/default\", {headers:h})\n      .then(resp=>resp.json())\n      .catch(err=>{\n        console.log(\"ERR\", err);\n      }).then(json=>{\n        const bid = json.data.id;\n        const uri = KINTO+\"/buckets/\"+bid+\"/collections\";\n        fetch(uri, {headers:h})\n          .then(resp=>resp.json())\n          .catch(err=>{\n            console.log(\"ERR2\", err);\n          })\n          .then(json=>{\n            console.log(\"COLLECTIONS\", bid, json);\n            this.getOrCreate(json.data, bid, h);\n          });\n      });\n  }\n  getOrCreate(collections, bid, h) {\n    h.set(\"Content-Type\", \"application/json\");\n    if(collections.length && collections\n        .filter(c=>\"todolists\" === c.id).length) {\n      console.log(\"LISTING\", bid);\n      this.listTodos(bid);\n    } else {\n      const uri = KINTO+\"/buckets/\"+bid+\"/collections\";\n      fetch(uri, {method:\"POST\", headers:h, body:JSON.stringify({\n          data:{id:\"todolists\"}\n        })})\n        .then(r=>r.json())\n        .then(j=>{\n          console.log(\"CREATED\", j);\n          this.listTodos(bid);\n        });\n    }\n  }\n  listTodos(bid) {\n    const h = new Headers();\n    h.set(\"Authorization\", this.props.authorization);\n    const uri = KINTO+\"/buckets/\"+bid+\"/collections/todolists/records\";\n    fetch(uri, {headers:h})\n        .then(r=>r.json())\n        .catch(err=>{\n            console.log(\"ERR3\", err);\n        })\n        .then(j=>{\n          console.log(\"GOT LISTS\", j);\n          const l = j.data[0];\n          const server = [KINTO, \"/buckets/\", bid,\n              \"/collections/todolists/records/\", l.id].join(\"\");\n          this.props.onReceivedServerList(l.todos, server);\n        });\n  }\n  maybeNew(event) {\n    if(event.keyCode === 13) {\n      this.addTodo();\n    }\n  }\n  addTodo() {\n    const title = this.inputRef.current.value;\n    if(title) {\n      this.props.onNewTodo(title);\n      this.inputRef.current.value = \"\";\n    }\n  }\n  render() {\n    return (\n      <main>\n      <h1>Todo list</h1>\n      <ul className=\"todolist\">\n      {this.props.todos.map(todo=>{\n        const _statusChange = this.props.onStatusChange.bind(\n              this,todo.id,nextStatus(todo.status));\n        const _titleChange = this.props.onTitleChange.bind(\n              this,todo.id);\n        return (\n            <li key={todo.id}>\n            <Todo id={todo.id} title={todo.title}\n              status={todo.status} creation={todo.creation}\n              onStatusChange={_statusChange}\n              onTitleChange={_titleChange}\n            />\n            </li>\n          );\n      })}\n      </ul>\n      <div className=\"newtitle\">\n        <input type=\"text\" onKeyUp={this._maybeNew} \n          ref={this.inputRef} />\n        <button onClick={this._addTodo}>Add</button>\n      </div>\n      </main>\n    );\n  }\n}\n\nexport default connect(\n    state=>({todos:state.todos, authorization:state.authorization}),\n    dispatch=>({\n      onStatusChange: (id,status)=>{\n        dispatch({type:\"STATUS_CHANGE\", id:id,status:status});\n      },\n      onTitleChange: (id, title) => {\n        if(title.trim()) {\n          dispatch({type:\"TITLE_CHANGE\", id:id,title:title});\n        } else {\n          dispatch({type:\"TODO_DELETE\", id:id});\n        }\n      },\n      onNewTodo: (title) => {\n        dispatch({type:\"TODO_ADD\", title:title});\n      },\n      onReceivedServerList: (todos, url) => {\n        console.log(\"RSL\", todos);\n        dispatch({type:\"REPLACE_ALL\", \n            todos:todos,\n            syncurl:url,\n          });\n      },\n    }),\n)(App);\n\n","// vim: set ts=2 sts=2 sw=2 expandtab :\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport * as serviceWorker from './serviceWorker';\nimport { createStore } from 'redux';\nimport { Provider } from 'react-redux';\nimport CredentialsProvider from './CredentialsProvider';\nimport App from './App';\nimport './index.css';\n\nfunction reducer(state, action) {\n    switch(action.type) {\n        case \"STATUS_CHANGE\":\n            return {...state,\n                todos:state.todos.map(t=>{\n                    if(t.id !== action.id) return t;\n                    return {...t, status:action.status, };\n                })\n            };\n        case \"TITLE_CHANGE\":\n            return {...state,\n                todos:state.todos.map(t=>{\n                    if(t.id !== action.id) return t;\n                    return {...t, title:action.title, };\n                })\n            };\n        case \"TODO_ADD\":\n            const maxid = state.todos.reduce((acc,t)=>Math.max(acc,t.id), 0);\n            return {...state,\n                todos:state.todos.concat([{\n                    id:maxid+1,\n                    status:\"todo\",\n                    title:action.title,\n                    creation:(new Date()).toISOString().replace(/T.*/,\"\"),\n                }])\n            };\n        case \"TODO_DELETE\":\n            return {...state,\n                todos:state.todos.filter(t=>t.id !== action.id),\n            };\n        case \"AUTH_OK\":\n            return {...state,\n                authorization:action.authorization,\n            };\n        case \"REPLACE_ALL\":\n            console.log(\"GOTCHA\", action);\n            return {...state,\n                todos:action.todos,\n                syncurl:action.syncurl,\n            };\n        default:\n            return state;\n    }\n}\n\nconst store = createStore(reducer, {todos:[]});\nstore.subscribe(() => console.log(\"STORE\", JSON.stringify(store.getState())));\nstore.subscribe(() => {\n  const state = store.getState();\n  if(state.syncurl) {\n    const payload = JSON.stringify({ data: {\n      todos:state.todos } });\n    const h = new Headers();\n    h.set(\"Authorization\", state.authorization);\n    h.set(\"Content-Type\", \"application/json\");\n    fetch(state.syncurl, {headers:h, method:\"PUT\", body:payload})\n      .then(resp=>resp.json())\n      .then(j=>{\n        console.log(\"SAVED\", j);\n      });\n  }\n});\n\n//store.dispatch({type:\"TODO_ADD\",title:\"First one\"});\n//store.dispatch({type:\"TITLE_CHANGE\",id:1,title:\"The first one\"});\n//store.dispatch({type:\"TODO_ADD\",title:\"Second one\"});\n//store.dispatch({type:\"STATUS_CHANGE\",id:1,status:\"finished\"});\n//store.dispatch({type:\"TODO_DELETE\",id:1});\n//store.dispatch({type:\"TODO_DELETE\",id:2});\n\nReactDOM.render(\n     (<Provider store={store}>\n       <CredentialsProvider>\n        <App />\n       </CredentialsProvider>\n      </Provider>),\n    document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}